{"version":3,"sources":["components/Common/Dashboard/TopBar.jsx","components/Common/Dashboard/Menu.jsx","components/Common/Dashboard/Dashboard.jsx","constants.js","components/Common/Flag/FlagIcon.jsx","components/Common/Flag/index.js","components/Map/MapWithAMarker.jsx","components/Map/Publications.jsx","components/Map/Map.jsx","components/Charts/MiningChart.jsx","components/Common/List/InfiniteScroll.jsx","components/Charts/MiningCountries.jsx","components/Charts/Charts.jsx","components/Keywords/KeywordList.jsx","components/Keywords/KeywordCountries.jsx","components/Keywords/Keywords.jsx","App.js","serviceWorker.js","i18n.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","TopBar","props","t","useTranslation","classes","AppBar","position","Toolbar","IconButton","onClick","toggleMenu","edge","className","color","aria-label","Menu","Typography","variant","items","href","text","icon","Place","PieChart","TrendingUp","Drawer","anchor","open","onClose","List","component","style","width","map","item","index","ListItem","key","button","Link","to","ListItemIcon","ListItemText","primary","Dashboard","state","menu","this","setState","Fragment","bind","Component","apiUrl","process","googleMapURL","api","path","params","url","URL","search","URLSearchParams","toString","headers","method","mode","cache","options","useCssModules","customCodes","xk","FlagIcon","CustomFlagIconFactory","React","require","compose","withStateHandlers","minZoom","maxZoom","zoom","center","lat","lng","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","markers","country","_id","label","fontSize","fontWeight","count","e","select","onCloseClick","code","margin","name","keywords","total","input","ListItemLink","TransField","TextField","placeholder","Publications","loading","publications","countries","page","perPage","debounce","getPublications","fetch","res","json","top","target","scrollTop","height","scrollHeight","bottom","clientHeight","a","async","onScroll","display","alignItems","justifyContent","i18nKey","Close","Box","onChange","onSearch","Autocomplete","id","getOptionLabel","value","selectCountry","renderOption","option","getTagProps","renderInput","overflowY","action","padding","pmc","secondary","affiliations","mapShift","transition","transitions","create","easing","easeOut","duration","enteringScreen","ColorCircularProgress","withStyles","CircularProgress","Loading","flex","justifyItems","backgroundColor","background","left","drawerWidth","zIndex","p","m","size","thickness","Map","useTheme","matches","useMediaQuery","breakpoints","up","useState","setKeywords","showPublications","setShowPublications","setCountry","setCountries","setSearch","setDebounce","setLoading","getCount","useCallback","console","error","useEffect","c","find","newContry","getKeywords","clsx","MapWithAMarker","loadingElement","containerElement","mapElement","clearTimeout","timeout","setTimeout","MiningChart","activeIndex","data","onPieEnter","gutterBottom","marginTop","cx","cy","innerRadius","outerRadius","startAngle","endAngle","fill","dataKey","onMouseEnter","i","formatter","payload","percentage","mining","flexWrap","Stop","ColorLinearProgress","colorPrimary","barColorPrimary","LinearProgress","InfiniteScroll","flexDirection","disabled","isLoading","marginBottom","length","maxHeight","selected","onSelect","undefined","avatar","MiningCountries","labelLine","colors","filter","RegExp","test","ListItemAvatar","Math","random","includes","randColor","push","Charts","getData","identifiedCountry","undefinedCountry","toFixed","Card","minHeight","CardContent","KeywordList","concat","minWidth","KeywordCountries","keyword","JSON","parse","Keywords","App","CssBaseline","exact","Boolean","window","location","hostname","match","resources","en","pt","i18n","use","initReactI18next","init","keySeparator","interpolation","escapeValue","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa69bb4e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation  } from 'react-i18next';\r\n\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Menu as MenuIcon,\r\n} from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function TopBar(props) {\r\n\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton onClick={props.toggleMenu} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {t('Depression-related articles')}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation  } from 'react-i18next';\r\n\r\nimport {    \r\n    Drawer,\r\n    List,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    ListItem,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Place,\r\n    PieChart,\r\n    TrendingUp,\r\n} from '@material-ui/icons';\r\n\r\nconst items = [\r\n    {\r\n        href: '/', \r\n        text: 'Map', \r\n        icon: <Place/> \r\n    },\r\n    {\r\n        href: '/charts', \r\n        text: 'Charts', \r\n        icon: <PieChart/> \r\n    },\r\n    {\r\n        href: '/keywords', \r\n        text: 'Keywords', \r\n        icon: <TrendingUp/> \r\n    }\r\n];\r\n\r\nexport default function Menu(props) {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Drawer anchor=\"left\" open={props.open} onClose={props.toggleMenu}>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\" style={{width: '340px'}}>\r\n                { items.map((item, index) => (\r\n                    <ListItem key={index} button component={Link} to={item.href} onClick={props.toggleMenu}>\r\n                        <ListItemIcon>\r\n                            { item.icon }\r\n                        </ListItemIcon>\r\n                    <ListItemText primary={t(item.text)} />\r\n                    </ListItem>\r\n                )) }\r\n            </List>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport TopBar from './TopBar';\r\nimport Menu from './Menu';\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: false,\r\n        }\r\n    }\r\n\r\n    toggleMenu() {\r\n        const menu = !this.state.menu;\r\n        this.setState({ menu })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <TopBar toggleMenu={this.toggleMenu.bind(this)} />\r\n                <Menu open={this.state.menu} toggleMenu={this.toggleMenu.bind(this)}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","const apiUrl = process.env.REACT_APP_API_URL || 'localhost:5000';\r\n\r\nexport const googleMapURL = 'https://maps.googleapis.com/maps/api/js?AIzaSyBU_jAnvZKTJ3s4ewBwimDqMZdh09J8NJ0';\r\n\r\nexport const api = (path, params, url=apiUrl) => {\r\n    url = new URL(`${url}/${path}`);\r\n    url.search = new URLSearchParams(params).toString();\r\n    return url;\r\n};\r\n\r\nexport const headers = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type' : 'application/json' },\r\n    mode: 'cors',\r\n    cache: 'default',\r\n}","import * as React from 'react'\r\nimport { CustomFlagIconFactory } from 'react-flag-icon-css'\r\nimport { codes } from './index'\r\n\r\nconst options = { useCssModules: false, customCodes: codes }\r\nconst FlagIcon = CustomFlagIconFactory(React, options)\r\n\r\nexport default FlagIcon;","import styles from './styles.css'\r\n \r\nconst codes = {\r\n  xk: 'Republic of Kosovo',\r\n}\r\n\r\nexport { styles, codes }","import React from 'react';\r\nimport FlagIcon from '../Common/Flag/FlagIcon';\r\n\r\nimport { \r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    Marker, \r\n    InfoWindow\r\n} from \"react-google-maps\"\r\n\r\nconst { compose, withStateHandlers } = require(\"recompose\");\r\n\r\nexport default compose(\r\n\twithStateHandlers((props) => ({\r\n        options: {\r\n            minZoom: 2,\r\n            maxZoom: 6,\r\n        },\r\n        zoom: 2,\r\n\t\tcenter: {\r\n\t\t\tlat: 0,\r\n\t\t\tlng: 0\r\n        },\r\n\t}), {\r\n\t}),\r\n\twithScriptjs,\r\n\twithGoogleMap\r\n\t)(props => (\r\n\t<GoogleMap\r\n        options={props.options}\r\n\t\tdefaultZoom={props.zoom}\r\n\t\tdefaultCenter={props.center}>\r\n\t\t{props.markers.map(country => (\r\n\t\t\t<Marker \r\n\t\t\t\tkey={country._id} \r\n\t\t\t\tposition={{ lat: country.lat, lng: country.lng }} \r\n\t\t\t\tlabel={{fontSize: '10px', fontWeight: '600', color: '#fff', text: country.count.toString()}} \r\n\t\t\t\tonClick={(e) => props.select(e, country)}>\r\n\t\t\t\t\t{props.country && props.country._id === country._id && \r\n                    <InfoWindow onCloseClick={props.select}>\r\n\t\t\t\t\t\t<div> \r\n\t\t\t\t\t\t\t<span>{ country.code && <FlagIcon code={country.code} />}</span>\r\n\t\t\t\t\t\t\t<span style={{ margin: '0 10px' }}>{ country.name } ({country.count})</span>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{ props.keywords.map(({_id, name, total}) => <li key={_id}>{name} ({total})</li>) }\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</InfoWindow>}\r\n\t\t\t</Marker>\r\n\t\t))}\r\n\t</GoogleMap>\r\n));\r\n","import React, { Component } from 'react';\r\n\r\nimport { api, headers } from '../../constants';\r\n\r\nimport { Trans, useTranslation } from 'react-i18next';\r\n\r\nimport './style.css'\r\nimport {    \r\n    Drawer,\r\n    List,\r\n    ListItemText,\r\n    ListItem,\r\n    IconButton,\r\n    Toolbar,\r\n    TextField,\r\n    Box,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Autocomplete,\r\n} from '@material-ui/lab';\r\n\r\nimport {\r\n    Close as CloseIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport FlagIcon from '../Common/Flag/FlagIcon';\r\n\r\nconst classes = {\r\n    input: {\r\n        margin: '5px',\r\n        width: '600px',\r\n    }\r\n}\r\n\r\nconst ListItemLink = (props) => (<ListItem button component=\"a\" {...props} />);\r\n\r\nconst TransField = (props) => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            style={classes.input}\r\n            label={t(props.label)}\r\n            variant=\"outlined\"\r\n            placeholder={t(props.placeholder)}\r\n        />\r\n    );\r\n}\r\nexport default class Publications extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            publications: [],\r\n            country: props.country ? props.country : null,\r\n            countries: [],\r\n            search: '',\r\n            page: 1,\r\n            perPage: 10,\r\n            debounce: null,\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if(props.search !== this.state.search || props.country !== this.state.country) {\r\n            this.setState({ \r\n                search: props.search, \r\n                page: 1,\r\n                perPage: 10, \r\n                publications: [],  \r\n                country: props.country ? props.country : null,\r\n                countries: props.countries,\r\n            }, this.getPublications);\r\n        }\r\n    }\r\n\r\n    async getPublications() {\r\n        if(this.state.loading) return;\r\n        this.setState({ loading: true })\r\n        let params = {\r\n            page: this.state.page,\r\n            perPage: this.state.perPage,\r\n            search: this.props.search,\r\n        };\r\n        if(this.props.country) {\r\n            params.country = this.props.country._id;\r\n        }\r\n        const url = api(`publications`, params)\r\n        const res = await fetch(url, headers)\r\n        const items = await res.json();\r\n        this.setState({ \r\n            publications: [\r\n                ...this.state.publications,\r\n                ...items\r\n            ],\r\n            loading: false, \r\n        });\r\n        \r\n    }\r\n    \r\n    async onScroll(e) {\r\n        if(this.state.loading) return;\r\n        const top = e.target.scrollTop;\r\n        const height = e.target.scrollHeight;\r\n        const bottom = height - top;\r\n        if(e.target.clientHeight/bottom * 100 >= 40) {\r\n            const page = this.state.page + 1;\r\n            this.setState({ page }, async () => \r\n                await this.getPublications()\r\n            );            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Drawer anchor=\"right\" variant=\"persistent\" open={this.props.open} onClose={this.props.toggleMenu} onScroll={this.onScroll.bind(this)}>\r\n                <Toolbar color=\"primary\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                    <Trans i18nKey=\"Publications Search\" />\r\n                    <IconButton onClick={this.props.toggleMenu} edge=\"end\" color=\"inherit\" aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Toolbar> \r\n                <Box>\r\n                    <TransField\r\n                        style={classes.input}\r\n                        onChange={this.props.onSearch}\r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Search by title\"\r\n                    />\r\n                    <Autocomplete\r\n                        id=\"country\"\r\n                        options={this.state.countries}\r\n                        getOptionLabel={({name, count}) => `${name} (${count})`}\r\n                        value={this.state.country}\r\n                        onChange={this.props.selectCountry}\r\n                        renderOption={(option, getTagProps) =>\r\n                            <span>\r\n                                <FlagIcon code={option.code}></FlagIcon>\r\n                                {option.name}\r\n                            </span>\r\n                        }\r\n                        renderInput={params => (\r\n                            <TransField\r\n                                {...params}\r\n                                style={classes.input}\r\n                                label=\"Country\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Country\"\r\n                            />\r\n                            )}\r\n                    />\r\n                </Box>\r\n                <List component=\"ul\" className=\"scroll\" style={{width: '600px', overflowY: 'auto'}}>\r\n                    { this.state.publications.map((item, index) => (\r\n                        <ListItem key={index} button onClick={item.action} style={{ padding: 0 }}>\r\n                            <ListItemLink href={`https://www.ncbi.nlm.nih.gov/pmc/${item.pmc}/`} target=\"_blank\" >\r\n                                <ListItemText primary={item.title} secondary={item.affiliations ? item.affiliations[0].name : ''}/>\r\n                            </ListItemLink>\r\n                        </ListItem>\r\n                    )) }\r\n                </List> \r\n            </Drawer>\r\n        )\r\n    }\r\n}\r\n\r\n","  \r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { api, headers, googleMapURL } from '../../constants';\r\nimport { makeStyles, withStyles, useTheme  } from '@material-ui/core/styles'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport { \r\n    Box,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\n\r\n\r\nimport MapWithAMarker from './MapWithAMarker';\r\nimport Publications from './Publications';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mapShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: '610px',\r\n    }\r\n}));\r\n\r\nconst ColorCircularProgress = withStyles({\r\n    root: {\r\n      color: '#6798e5',\r\n    },\r\n})(CircularProgress);\r\n\r\nconst Loading = (props) => {\r\n\r\n    return (\r\n        <Box\r\n            display=\"flex\"\r\n            flex=\"1\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            justifyItems=\"center\"\r\n            style={{ \r\n                backgroundColor: 'transparent',\r\n                background: '#0009',\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: `calc(100% - ${props.drawerWidth})`,\r\n                height: '100vh',\r\n                zIndex: '9'\r\n            }}\r\n            p={0}\r\n            m={0}\r\n        >\r\n            <ColorCircularProgress size={50} thickness={5} />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default function Map() {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    const [ keywords, setKeywords ] = useState([]);\r\n    const [ showPublications, setShowPublications ] = useState(true);\r\n    const [ country, setCountry ] = useState(false);\r\n    const [ countries, setCountries ] = useState([]);\r\n    const [ search, setSearch ] = useState('');\r\n    const [ debounce, setDebounce ] = useState(null);\r\n    const [ loading, setLoading ] = useState(null);\r\n    \r\n    const getCount = useCallback(async () => {\r\n        setLoading(true);\r\n        const url = api('publications/count', {\r\n            search,\r\n        })\r\n        const res = await fetch(url, headers)\r\n        const countries = await res.json();\r\n        if(countries) {\r\n            setCountries(countries);\r\n        } else {\r\n            console.error(`FAIL TO LOAD COUNTRIES`);\r\n        }\r\n        setLoading(false);\r\n    }, [search])\r\n\r\n    useEffect(() => {\r\n        getCount();\r\n    }, [getCount]);\r\n\r\n    useEffect(() => {\r\n        if(country && country._id) {\r\n            const c = countries.find(({_id}) => country._id === _id);\r\n            if(c) {\r\n                setCountry(c);\r\n            } else {\r\n                setCountry(c => ({...c, count: 0}));\r\n            }\r\n        }\r\n    }, [country, countries]);\r\n\r\n    useEffect(() => {\r\n        setShowPublications(!!matches);\r\n    }, [matches])\r\n\r\n    const selectCountry = async (e, newContry=false) => {\r\n        let keywords = [];\r\n        if(newContry && newContry._id && newContry !== country) {\r\n            keywords = await getKeywords(newContry);\r\n            setKeywords(keywords);\r\n        }\r\n        setShowPublications(matches);\r\n        setCountry(newContry);\r\n    }\r\n\r\n    const getKeywords = async ({_id}) => {\r\n        const url = api(`countries/${_id}/keywords`, {\r\n            perPage: 5,\r\n            page: 1,\r\n        })\r\n        const res = await fetch(url, headers)\r\n        return await res.json();\r\n    }\r\n\r\n    const onSearch = (e) => {\r\n        const { value } = e.target;\r\n        clearTimeout(debounce);\r\n        const timeout = setTimeout(() => {\r\n            setSearch(value);\r\n        }, 300);\r\n        setDebounce(timeout);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box\r\n                display=\"flex\"\r\n                flex=\"1\"\r\n                className={clsx({[classes.mapShift]: showPublications})}\r\n                p={0}\r\n                m={0}\r\n            >\r\n                { loading && <Loading drawerWidth={showPublications ? '610px' : '0'} /> }\r\n                <MapWithAMarker\r\n                    googleMapURL={googleMapURL}\r\n                    loadingElement={<div style={{ display: 'flex', flex: 1 }} />}\r\n                    containerElement={<div style={{ display: 'flex', flex: 1 }} />}\r\n                    mapElement={<div style={{ display: 'flex', flex: 1  }} />}\r\n                    markers={countries} \r\n                    select={selectCountry}\r\n                    country={country}\r\n                    keywords={keywords}\r\n                />\r\n            </Box>\r\n            <Publications \r\n                open={showPublications} \r\n                toggleMenu={() => setShowPublications(!showPublications)} \r\n                countries={countries} \r\n                country={country} \r\n                selectCountry={selectCountry}\r\n                search={search}\r\n                onSearch={onSearch}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Trans } from 'react-i18next';\r\n\r\nimport { \r\n    PieChart, \r\n    Pie, \r\n    Cell,\r\n    Tooltip,\r\n} from 'recharts';\r\n\r\nimport {\r\n    Typography,\r\n    Box,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Stop\r\n} from '@material-ui/icons';\r\n\r\nexport default class MiningChart extends Component {\r\n\r\n    state = {\r\n        activeIndex: 0,\r\n        data: [],\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.data) {\r\n            return {\r\n                data: props.data\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onPieEnter = (data, index) => {\r\n        this.setState({ activeIndex: index });\r\n    };  \r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    <Trans i18nKey=\"Identified countries\" />\r\n                </Typography>\r\n                <PieChart width={300} height={200} style={{ marginTop: '60px' }}>\r\n                    <Pie\r\n                        activeIndex={this.state.activeIndex}\r\n                        data={this.state.data}\r\n                        cx={150}\r\n                        cy={130}\r\n                        innerRadius={60}\r\n                        outerRadius={80}\r\n                        startAngle={180}\r\n                        endAngle={0}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                        onMouseEnter={this.onPieEnter}\r\n                    >\r\n                        { this.state.data.map(({color}, i) => <Cell key={i} fill={color} />) }\r\n                    </Pie>\r\n                    <Tooltip formatter={(value, name, {payload}) => `${value} (${payload.percentage}%)`}/>\r\n                </PieChart>\r\n                { this.state.data.map(mining => \r\n                    (<Box \r\n                        key={mining.color}\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"start\" \r\n                        height=\"100%\"\r\n                        flexWrap=\"wrap\"\r\n                        p={1}\r\n                    >\r\n                        <Stop style={{ color: mining.color }}/>\r\n                        <Trans i18nKey={mining.name} /> - {mining.value} ({mining.percentage}%)\r\n                    </Box>) \r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nimport {\r\n    TextField,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Box,\r\n    CircularProgress,\r\n    LinearProgress,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nimport { Trans, useTranslation } from 'react-i18next';\r\n\r\nconst ColorCircularProgress = withStyles({\r\n    root: {\r\n      color: '#6798e5',\r\n    },\r\n})(CircularProgress);\r\n\r\nconst ColorLinearProgress = withStyles({\r\n    colorPrimary: {\r\n      backgroundColor: '#eef3fd',\r\n    },\r\n    barColorPrimary: {\r\n      backgroundColor: '#6798e5',\r\n    },\r\n})(LinearProgress);\r\n\r\nexport default function InfiniteScroll(props) {\r\n    \r\n    const { t } = useTranslation();\r\n    \r\n\r\n    return (\r\n        <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"start\" \r\n            p={1}\r\n            height=\"100%\"\r\n            style={props.style}\r\n        >\r\n            { props.title && \r\n                <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n                    <Trans i18nKey={props.title}/> \r\n                </Typography>\r\n            }\r\n            <TextField \r\n                variant=\"outlined\" \r\n                label={t('Search')} \r\n                placeholder={t('Search by name')} \r\n                value={props.search} \r\n                onChange={props.onSearch}\r\n                disabled={!!props.isLoading}\r\n                style={{marginBottom: '5px', width: '100%'}}\r\n            />\r\n            <div style={{display: 'flex', flexGrow: 1, alignItems: !!props.items.length && !props.isLoading ? 'start' : 'center', justifyContent: 'center', width: '100%'}}>\r\n            { props.isLoading === 'NO_DATA' || props.isLoading === true ? \r\n                <ColorCircularProgress size={50} thickness={5} /> \r\n                : props.items && !!props.items.length ? \r\n                    <List className=\"scroll\" component=\"ul\" style={{ maxHeight: props.height ? props.height : '350px', overflowY: 'auto',  width: '100%' }} onScroll={props.onScroll}>\r\n                        { props.items\r\n                            .map((item, i) => \r\n                                <ListItem \r\n                                    key={i}\r\n                                    button \r\n                                    selected={!!props.selected && props.selected(item, i)} \r\n                                    onClick={(e) => props.onSelect ? props.onSelect(e, item) : undefined}\r\n                                >\r\n                                    { !!props.avatar && props.avatar(item, i) }\r\n                                    <ListItemText primary={props.primary(item, i)} secondary={props.secondary(item, i)} />\r\n                                </ListItem>\r\n                        )}\r\n                    </List>\r\n                : t('No Data')\r\n            }\r\n            </div>\r\n            { props.isLoading === 'MORE' && <ColorLinearProgress style={{width: '30%', marginTop: '5px'}} /> }\r\n        </Box>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Trans } from 'react-i18next';\r\n\r\nimport {\r\n    PieChart, \r\n    Pie, \r\n    Tooltip, \r\n    Cell,\r\n} from 'recharts';\r\n\r\nimport {\r\n    Box,\r\n    Typography,\r\n    ListItemAvatar,\r\n} from '@material-ui/core';\r\n\r\nimport FlagIcon from '../Common/Flag/FlagIcon';\r\n\r\nimport InfiniteScroll from '../Common/List/InfiniteScroll';\r\n\r\nconst randColor = (colors) => {\r\n    let color = '';\r\n    \r\n    do {\r\n        color = '#'+(Math.random()*0xFFFFFF<<0).toString(16);;\r\n    } while(colors.includes(color));\r\n        \r\n    return color;\r\n}\r\n\r\nexport default class MiningCountries extends Component {\r\n\r\n    state = {\r\n        search: '',\r\n        data: [],\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.data !== state.data) {\r\n            let colors = [];\r\n            return {\r\n                data: props.data,\r\n                colors: props.data.map(() => {\r\n                    const color = randColor(colors);\r\n                    colors.push(color)\r\n                    return color;\r\n                })\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onSearch(e) {\r\n        const search = e.target.value;\r\n        this.setState({ search });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    <Trans i18nKey=\"Publications by country\" />\r\n                </Typography>\r\n                <Box \r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-around\" \r\n                    flexWrap=\"wrap\"\r\n                    p={0}\r\n                    m={0}\r\n                >\r\n                    <PieChart width={500} height={400}>\r\n                        <Pie\r\n                            data={this.state.data}\r\n                            cx={250}\r\n                            cy={200}\r\n                            labelLine={false}\r\n                            outerRadius={80}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"count\"\r\n                        >\r\n                            {this.state.data.map((country, index) => \r\n                                <Cell key={country._id} fill={this.state.colors[index]} />)}\r\n                        </Pie>\r\n                        <Tooltip formatter={(value, name, {payload}) => `${value} (${payload.percentage})%` }/>\r\n                    </PieChart>\r\n                    <InfiniteScroll \r\n                        items={this.state.data.filter(({name}) => (\r\n                            new RegExp(`.*${this.state.search}.*`, 'gi')).test(name)\r\n                        )}\r\n                        isLoading={this.props.isLoading}\r\n                        primary={(c, i) => `${c.index+1}º ${c.name}`} \r\n                        secondary={(c) => `${c.count} (${c.percentage}%)`}\r\n                        onSearch={this.onSearch.bind(this)}\r\n                        avatar={(item) => (\r\n                            <ListItemAvatar>\r\n                                <FlagIcon code={item.code} size=\"2x\"/>\r\n                            </ListItemAvatar>\r\n                        )}\r\n                    />\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { \r\n    Card,\r\n    Typography, \r\n    CardContent,\r\n    Box,\r\n} from '@material-ui/core';\r\n\r\nimport { api, headers } from '../../constants';\r\n\r\nimport { Trans } from 'react-i18next';\r\n\r\nimport MiningChart from './MiningChart';\r\nimport MiningCountries from './MiningCountries';\r\n\r\nexport default class Charts extends Component {\r\n\r\n    state = {\r\n        mining: [],\r\n        countries: [],\r\n        loading: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    async getData() {\r\n        this.setState({ loading: true })\r\n        const url = api('charts/list')\r\n        const res = await fetch(url, headers);\r\n        const {identifiedCountry, total, countries} = await res.json();\r\n        const undefinedCountry = total - identifiedCountry;\r\n        const mining = [\r\n            { value: identifiedCountry,  name: 'Defined Country', color: '#00e676', percentage: (identifiedCountry/total * 100).toFixed(2) },\r\n            { value: undefinedCountry,  name: 'Undefined Country', color: '#f50057',  percentage: (undefinedCountry/total * 100).toFixed(2) }\r\n        ];\r\n        this.setState({ \r\n            mining, \r\n            countries, \r\n            loading: false \r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ padding: '30px'}}>\r\n                    <Trans i18nKey=\"Charts\" />\r\n                </Typography>\r\n                <Box \r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-around\" \r\n                    flexWrap=\"wrap\"\r\n                    p={1}\r\n                >\r\n                    <Card style={{ margin: '5px', minHeight: '510px' }}>\r\n                        <CardContent>\r\n                            <MiningChart data={this.state.mining}/>\r\n                        </CardContent>\r\n                    </Card>\r\n                    <Card style={{ margin: '5px', minHeight: '510px' }}>\r\n                        <CardContent>\r\n                            <MiningCountries data={this.state.countries} isLoading={this.state.isLoading} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { api, headers } from '../../constants';\r\n\r\nimport InfiniteScroll from '../Common/List/InfiniteScroll';\r\n\r\nexport default class KeywordList extends Component {\r\n\r\n    state = {\r\n        keywords: [],\r\n        loading: false,\r\n        search: '',\r\n        page: 1,\r\n        perPage: 20,\r\n        debounce: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: 'NO_DATA' })\r\n        this.getData();\r\n    }\r\n\r\n    async onScroll(e) {\r\n        if(this.state.loading) return;\r\n        const top = e.target.scrollTop;\r\n        const height = e.target.scrollHeight;\r\n        const bottom = height - top;\r\n        if(e.target.clientHeight/bottom * 100 >= 40) {\r\n            const page = this.state.page + 1;\r\n            this.setState({ \r\n                page, \r\n                loading: 'MORE' \r\n            }, async () => await this.getData());\r\n        }\r\n    }\r\n\r\n    async getData() {\r\n        const url = api('keywords', {\r\n            page: this.state.page,\r\n            perPage: this.state.perPage,\r\n            search: this.state.search,\r\n        })\r\n        const res = await fetch(url, headers);\r\n        let items = await res.json();\r\n        let keywords = this.state.keywords;\r\n        keywords = keywords.concat(items)\r\n        this.setState({ \r\n            keywords,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    onSearch(e) {\r\n        const search = e.target.value\r\n        clearTimeout(this.state.debounce);\r\n        const debounce = setTimeout(() => {\r\n            this.setState({ \r\n                search, \r\n                page: 1, \r\n                perPage: 10, \r\n                keywords: [] \r\n            }, async () => await this.getData());\r\n        }, 300);\r\n        this.setState({ debounce })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <InfiniteScroll \r\n                items={this.state.keywords.filter(({name}) => (\r\n                    new RegExp(`.*${this.state.search}.*`, 'gi')).test(name)\r\n                )}\r\n                onSearch={this.onSearch.bind(this)}\r\n                onScroll={this.onScroll.bind(this)}\r\n                primary={(item, i) => `(${i+1})ª ${item.name}`} \r\n                secondary={(item) => item.count}\r\n                selected={(item) => item._id === this.props.selected._id}\r\n                onSelect={this.props.onSelect}\r\n                style={{minWidth: '350px'}}\r\n                height=\"70vh\"\r\n                isLoading={this.state.loading}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { api, headers } from '../../constants';\r\n\r\nimport {\r\n    ListItemAvatar,\r\n} from '@material-ui/core';\r\n\r\nimport FlagIcon from '../Common/Flag/FlagIcon';\r\n\r\nimport InfiniteScroll from \"../Common/List/InfiniteScroll\";\r\n\r\nexport default class KeywordCountries extends Component {\r\n    \r\n    state = {\r\n        countries: [],\r\n        loading: false,\r\n        search: '',\r\n        debounce: null,\r\n        keyword: {},\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if(props.keyword._id !== state.keyword._id) {\r\n            return {\r\n                keyword: props.keyword\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async componentDidUpdate(props, state) {\r\n        if(state.keyword._id !== this.state.keyword._id && this.state.keyword._id) {\r\n            await this.getData(false, this.state.keyword)\r\n        } \r\n    }\r\n\r\n    async getData(e, keyword) {\r\n\r\n        this.setState({ loading: true })\r\n        const url = api(`keywords/${keyword._id}/countries`)\r\n        const res = await fetch(url, headers);\r\n        let countries = await res.json();\r\n        countries = JSON.parse(countries.countries);\r\n\r\n        this.setState({ \r\n            countries,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    onSearch(e) {\r\n        const search = e.target.value;\r\n        this.setState({ search });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <InfiniteScroll \r\n                style={{flexGrow: 1}}\r\n                items={this.state.countries.filter(({name}) => (\r\n                    new RegExp(`.*${this.state.search}.*`, 'gi')).test(name)\r\n                )}\r\n                onSearch={this.onSearch.bind(this)}\r\n                isLoading={this.state.loading}\r\n                height=\"70vh\"\r\n                primary={({index, name}) => `${index+1}º ${name}`} \r\n                secondary={({total, percentage}) => `${total} (${percentage}%)`}\r\n                avatar={({code}) => (\r\n                    <ListItemAvatar>\r\n                        <FlagIcon code={code} size=\"2x\"/>\r\n                    </ListItemAvatar>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport { \r\n    Typography, \r\n    Box,\r\n} from '@material-ui/core'\r\n\r\nimport { Trans } from 'react-i18next';\r\n\r\nimport KeywordList from './KeywordList';\r\nimport KeywordCountries from './KeywordCountries';\r\n\r\nexport default class Keywords extends Component {\r\n\r\n    state = {\r\n        selected: {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h5\" style={{ padding: '30px'} }>\r\n                    <Trans i18nKey=\"Keywords\"/> \r\n                </Typography>\r\n                <Box \r\n                    display=\"flex\"\r\n                    alignItems=\"start\"\r\n                    justifyContent=\"space-around\" \r\n                    height=\"100%\"\r\n                    flexWrap=\"wrap\"\r\n                    p={1}\r\n                >\r\n                    <KeywordList selected={this.state.selected} onSelect={(e, selected) => this.setState({ selected })} />\r\n                    <KeywordCountries keyword={this.state.selected}/>\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport  {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport Dashboard from \t'./components/Common/Dashboard/Dashboard';\nimport Map from \t'./components/Map/Map';\nimport Charts from \t'./components/Charts/Charts';\nimport Keywords from './components/Keywords/Keywords';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div style={{height: '100vh', display: 'flex', flexDirection: 'column'}}>\n        <Router>\n          <Dashboard />\n          <Switch>\n            <Route exact path=\"/\" component={Map} />\n            <Route path=\"/charts\" component={Charts} /> \n            <Route path=\"/keywords\" component={Keywords} /> \n          </Switch>\n        </Router>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport en from './Localization/en.json';\r\nimport pt from './Localization/pt.json';\r\n\r\n// the translations\r\nconst resources = {\r\n  en: en,\r\n  pt: pt,\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"pt\",\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\n  export default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import i18n (needs to be bundled ;)) \nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}